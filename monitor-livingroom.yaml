esphome:
  name: monitor-livingroom
  friendly_name: monitor-livingroom
  #compile_process_limit: 1

esp32:
  board: lilygo-t-display-s3
  framework:
    type: esp-idf

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "XXXXXXXXXXXXXXXXXXXXXXXX"

ota:
  - platform: esphome
    password: "XXXXXXXXXXXXXXXXXXX"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Optional manual IP
  manual_ip:
    static_ip: 192.168.178.53
    gateway: 192.168.178.1
    subnet: 255.255.255.0

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Monitor-Livroom Fallback Hotspot"
    password: "XXXXXXXXXXXX"

captive_portal: 

# http
web_server:
  port: 80

sensor:
  - platform: dht
    pin: GPIO16
    model: DHT22
    temperature:
      name: "Temperature"
    humidity:
      name: "Humidity"
    update_interval: 60s

#liligo GPI017 -> groen -> mmwave RX 
#liligo GPI018 -> blauw -> mmwave TX 
#liligo GPI034 -> geel -> mmwave GPIO1
#liligo GPI033 -> grijs -> mmwave GPIO2
uart:
  - id: U0
    tx_pin: 38 
    rx_pin: 37
    baud_rate: 9600
    #debug:
    #direction: BOTH
    #dummy_receiver: true
    #sequence:
    #  - lambda: |-
    #      ESP_LOGD("U0", "Debug");
    #      UARTDebug::log_string(direction, bytes);
  - id: U1
    tx_pin: 18
    rx_pin: 17
    baud_rate: 115200
    #debug:
    #direction: BOTH
    #dummy_receiver: true
    #after:
    #  delimiter: "\n"
    #sequence:
    #  - lambda: UARTDebug::log_string(direction, bytes);

dfrobot_sen0395:
  - id: mmwave_1
    uart_id: U1

binary_sensor:
  # Information coming from uart bus
  - platform: dfrobot_sen0395
    name: Presence detected via UART

  # Information coming from dedicated gpio (IO2)
  - platform: gpio
    name: Presence detected via GPIO
    device_class: motion
    pin:
      number: GPIO33
      mode: INPUT_PULLDOWN

# Switch to turn on/off detection
#switch:
#  - platform: dfrobot_sen0395
#    type: sensor_active
#    name: mmwave Active

## Sen0395 common
button:
  - platform: template
    name: Restart mmW
    id: restart_mmwave
    entity_category: config
    internal: true
    on_press:
      - dfrobot_sen0395.reset:

  - platform: template
    id: restart_all
    name: Restart All
    icon: mdi:restart
    entity_category: config
    disabled_by_default: false
    internal: false
    on_press:
      - button.press: restart_mmwave
      
  - platform: template
    name: Restart Factory mmW 
    icon: mdi:cog-counterclockwise
    id: factory_reset_mmwave
    internal: true
    entity_category: config
    on_press:
      - switch.turn_off: mmwave_sensor
      - delay: 1s
      - dfrobot_sen0395.settings:
          factory_reset: true
      - delay: 3s
      - switch.turn_on: mmwave_sensor

  - platform: template  
    id: trigger_mmwave_settings  
    # name: Trigger mmWave Settings  
    internal: true
    on_press:  
      - dfrobot_sen0395.settings:  
          detection_segments:  
            - !lambda |-  
                return 0;  
            - !lambda |-  
                return id(mmwave_distance).state;  
          output_latency:  
            delay_after_detect: !lambda |-    
              return id(mmwave_on_latency).state;    
            delay_after_disappear: !lambda |-    
              return id(mmwave_off_latency).state;    
          sensitivity: !lambda |-  
            return id(mmwave_sensitivity).state;  

#light:
#  - platform: binary
#    name: mmWave LED
#    output: mmwave_led_output
#    entity_category: config
#    disabled_by_default: false
#
#output:
#  - platform: template
#    id: mmwave_led_output
#    type: binary
#    write_action:
#      - switch.turn_off: mmwave_sensor
#      - delay: 1s
#      - if:
#          condition:
#            lambda: !lambda return state;
#          then:
#            - uart.write: "setLedMode 1 0"
#          else:
#            - uart.write: "setLedMode 1 1"
#      - delay: 1s
#      - uart.write: "saveConfig"
#      - delay: 3s
#      - switch.turn_on: mmwave_sensor
#
  

number:
  - platform: template  
    id: mmwave_distance  
    name: Adj mmW Distance  
    icon: mdi:arrow-left-right  
    entity_category: config  
    min_value: 0.0  
    max_value: 8.0  
    initial_value: 4.05  
    optimistic: true  
    step: 0.15  
    restore_value: true  
    unit_of_measurement: m  
#    mode: slider  
    mode: box
    set_action:   
      - logger.log: "mmW Distance set"    
      # - switch.turn_off: mmwave_sensor    
      # - delay: 1s    
      - button.press: trigger_mmwave_settings  
      # - delay: 1s  
      # - switch.turn_on: mmwave_sensor   

  - platform: template
    id: mmwave_off_latency
    name: Adj mmW Latency off
    icon: mdi:clock-end
    entity_category: config
    min_value: 1.0
    max_value: 30.0
    initial_value: 10.0
    optimistic: true
    step: 1.0
    restore_value: true
    unit_of_measurement: seconds
    mode: box
    set_action:   
      - logger.log: "mmW Off latency set"
      # - switch.turn_off: mmwave_sensor    
      # - delay: 1s    
      - button.press: trigger_mmwave_settings  
      # - delay: 1s  
      # - switch.turn_on: mmwave_sensor   

  - platform: template
    id: mmwave_on_latency
    name: Adj mmW Latency On
    icon: mdi:clock-start
    entity_category: config
    min_value: 0.0
    max_value: 1.0
    initial_value: 0.0
    optimistic: true
    step: 0.25
    restore_value: true
    unit_of_measurement: seconds
    mode: box
    set_action:   
      - logger.log: "mmW On latency set"
      # - switch.turn_off: mmwave_sensor    
      # - delay: 1s    
      - button.press: trigger_mmwave_settings  
      # - delay: 1s  
      # - switch.turn_on: mmwave_sensor   

  - platform: template  
    id: mmwave_sensitivity  
    name: Adj mmW Sensitivity  
    icon: mdi:target-variant  
    entity_category: config  
    min_value: 0  
    max_value: 9  
    initial_value: 7  
    optimistic: true  
    step: 1  
    restore_value: true  
    set_action:  
      - logger.log: "mmW Sensitivity set"    
      # - switch.turn_off: mmwave_sensor    
      # - delay: 1s    
      - button.press: trigger_mmwave_settings  
      # - delay: 1s  
      # - switch.turn_on: mmwave_sensor  

switch:
  - platform: dfrobot_sen0395
    # dfrobot_sen0395_id: mmwave_1
    name: mmW Sensor Active
    id: mmwave_sensor
    type: sensor_active
    disabled_by_default: false
    # inverted: true
    entity_category: config
    # optimistic: true
    restore_mode: DISABLED
    # turn_on_action:
    #   - uart.write: "sensorStart"
    #   - delay: 1s
    # turn_off_action:
    #   - uart.write: "sensorStop"
    #   - delay: 1s

  - platform: dfrobot_sen0395
    # dfrobot_sen0395_id: mmwave_1
    name: LED mmWave
    id: mmwave_led
    type: turn_on_led
    disabled_by_default: false
    # entity_category: config
    # inverted: true

  - platform: dfrobot_sen0395
    # dfrobot_sen0395_id: mmwave_1
    name: mmW UART Presence
    id: uart_presence_output
    type: presence_via_uart
    disabled_by_default: false
    # entity_category: config
    # optimistic: true
    # restore_mode: DISABLED
    # turn_on_action:
    #   - uart.write: "sensorStart"
    #   - delay: 1s
    # turn_off_action:
    #   - uart.write: "sensorStop"
    #   - delay: 1s

